<Page x:Class="Egate_Printers_Page_Computation.Pages.collection_page"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Egate_Printers_Page_Computation.Pages"
      xmlns:me="clr-namespace:Egate_Printers_Page_Computation"
      xmlns:helpers="clr-namespace:Egate_Printers_Page_Computation.Helpers"
      xmlns:customs="clr-namespace:bolt5.CustomControls;assembly=bolt5.CustomControls.Wpf"
      xmlns:popups="clr-namespace:Egate_Printers_Page_Computation.Popups"
      xmlns:xceed="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
      mc:Ignorable="d" 
      d:DesignHeight="450"
      Title="collection_page" Loaded="Page_Loaded">
    <Page.Resources>
        <DataTemplate x:Key="AddWithoutSchedule">
            <Button Style="{StaticResource BorderlessButton}" FontFamily="{StaticResource fontawesome-solid}" Content="{StaticResource fa-plus}" Click="AddSchedule_Click" Margin="3,0,3,0" Foreground="DarkGreen" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="Add Collection Schedule"/>
        </DataTemplate>
        <DataTemplate x:Key="EditWithSchedule">
            <Button Style="{StaticResource BorderlessButton}" FontFamily="{StaticResource fontawesome-solid}" Content="{StaticResource fa-edit}" Click="AddSchedule_Click" Margin="3,0,3,0" Foreground="Navy" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="Edit Schedule"/>
        </DataTemplate>
        <local:CompanyScheduleTemplateSelector x:Key="AddEditScheduleTemplateSelector" WithScheduleTemplate="{StaticResource EditWithSchedule}" WithoutScheduleTemplate="{StaticResource AddWithoutSchedule}"/>
        <DataTemplate x:Key="CollectWithSchedule">
            <Button Style="{StaticResource BorderlessButton}" FontFamily="{StaticResource fontawesome-solid}" Content="{StaticResource fa-money-bill}" Click="Collect_Click" Margin="5,0,5,0" FontSize="14" Foreground="DarkGreen" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="Collect Amount"/>
        </DataTemplate>
        <DataTemplate x:Key="CollectWithoutSchedule">
            <Button Style="{StaticResource BorderlessButton}" FontFamily="{StaticResource fontawesome-solid}" Content="{StaticResource fa-money-bill}" Click="Collect_Click" Margin="5,0,5,0" FontSize="14" Foreground="DarkGreen" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="Collect Amount without Schedule"/>
        </DataTemplate>
        <local:CompanyScheduleTemplateSelector x:Key="CollectScheduleTemplateSelector" WithScheduleTemplate="{StaticResource CollectWithSchedule}" WithoutScheduleTemplate="{StaticResource CollectWithoutSchedule}"/>
    </Page.Resources>
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="130"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="450"/>
            <ColumnDefinition Width="500"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="3">
            <!-- company filters -->
            <GroupBox x:Name="filtersGroup" Header="Filters" VerticalAlignment="Top" HorizontalAlignment="Left">
                <StackPanel Orientation="Vertical" Margin="{StaticResource Filters.GroupBox.Margin}">
                    <StackPanel Orientation="Horizontal" Margin="{StaticResource Filters.Vertical.Margin}">
                        <customs:LabelContainer Header="Company" Placement="Left" Margin="{StaticResource Filters.Fields.Margin}">
                            <TextBox Text="{Binding FilterCompanyName,UpdateSourceTrigger=PropertyChanged}" Width="200"/>
                        </customs:LabelContainer>
                        <customs:LabelContainer Header="Location" Placement="Left" Margin="{StaticResource Filters.Fields.Margin}">
                            <ComboBox ItemsSource="{Binding LocationList}" SelectedValuePath="Id" DisplayMemberPath="LocationName" SelectedValue="{Binding FilterLocation}" Width="120" Validation.ErrorTemplate="{x:Null}"/>
                        </customs:LabelContainer>
                        <customs:LabelContainer Header="Client Type" Placement="Left" Margin="{StaticResource Filters.Fields.Margin}">
                            <ComboBox ItemsSource="{Binding Source={StaticResource CompanyClientTypeFullData}}" SelectedItem="{Binding FilterClientType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="90"/>
                        </customs:LabelContainer>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="{StaticResource Filters.Vertical.Margin}">
                        <CheckBox Content="Bank Transfer" IsChecked="{Binding ShowBankTransfer}" Style="{StaticResource RightCheckBox}" VerticalAlignment="Center" Margin="{StaticResource Filters.Fields.Margin}"/>
                        <CheckBox Content="Show InActive" IsChecked="{Binding ShowInactiveCompany}" Style="{StaticResource RightCheckBox}" VerticalAlignment="Center" Margin="{StaticResource Filters.Fields.Margin}"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <!-- schedule filters -->
            <GroupBox x:Name="scheduleFiltersGroup" Header="Filter Schedule" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="20,0,0,0">
                <StackPanel Orientation="Horizontal" Margin="{StaticResource Filters.GroupBox.Margin}">
                    <CheckBox Content="Follow-up List" IsChecked="{Binding FollowupList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="{StaticResource Filters.Fields.Margin}" VerticalAlignment="Bottom"/>
                    <CheckBox VerticalContentAlignment="Bottom" IsChecked="{Binding ShowForFollowupSchedule,UpdateSourceTrigger=PropertyChanged}" Margin="{StaticResource Filters.Fields.Margin}">
                        <TextBlock>Show Follow Up Schedule as of <xceed:IntegerUpDown Value="{Binding ForFollowupScheduleDays,UpdateSourceTrigger=PropertyChanged}" ShowButtonSpinner="True" Width="50" Margin="3,0,3,0"/> days ago</TextBlock>
                    </CheckBox>
                    <customs:LabelContainer Header="Notes" Placement="Left" Margin="{StaticResource Filters.Fields.Margin}">
                        <ComboBox ItemsSource="{Binding Source={StaticResource ScheduleNotesTypeData}}" SelectedItem="{Binding FilterNotesType,UpdateSourceTrigger=PropertyChanged}" Width="200"/>
                    </customs:LabelContainer>
                </StackPanel>
            </GroupBox>
        </StackPanel>

        <StackPanel Grid.ColumnSpan="3" Orientation="Horizontal" VerticalAlignment="Bottom" Margin="0,0,0,8">
            <Button Content="Add Company" Click="AddCompany_Click" HorizontalAlignment="Left"/>
            <!-- totals -->
            <StackPanel x:Name="totalsGroup" Orientation="Horizontal" VerticalAlignment="Bottom" Margin="50,0,0,0">
                <StackPanel Orientation="Horizontal">
                    <Button Content="Export Companies" Click="ExportCompany_Click" VerticalAlignment="Center" Style="{StaticResource ExportButton}"/>
                    <TextBlock Text="{Binding TotalActiveCompany}" FontWeight="Bold" Foreground="DarkGreen" FontSize="14" VerticalAlignment="Center" Margin="5,0,0,0" ToolTip="Number of Companies based on filtering"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="30,0,0,0">
                    <Button Content="Export Schedules" Click="ExportSchedule_Click" VerticalAlignment="Center" Style="{StaticResource ExportButton}"/>
                    <TextBlock Text="{Binding TotalSchedules}" FontWeight="Bold" Foreground="DarkGreen" FontSize="14" VerticalAlignment="Center" Margin="5,0,0,0" ToolTip="Number of Scheduled collection based on filtering"/>
                </StackPanel>
            </StackPanel>
            <!--<Button Content="Clear All Schedules" Click="ClearSchedule_Click" Foreground="Red" BorderBrush="Red" Margin="150,0,0,0"/>-->
        </StackPanel>

        <!-- reset company selection -->
        <Button Grid.ColumnSpan="2" Content="Reset Selection" Click="ResetCompanySelection_Click" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,8"/>
        
        <!-- company details popup -->
        <customs:PopupModal x:Name="companyDetailsPopup" Placement="Bottom" VerticalOffset="5">
            <Grid>
                <Grid.Effect>
                    <DropShadowEffect/>
                </Grid.Effect>
                <Border Background="White" BorderBrush="Gray" BorderThickness="1" Margin="0,0,3,3">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Company Details" FontWeight="Bold" FontSize="16" Margin="12,5,0,0"/>
                        <Button Style="{StaticResource CloseButton}" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type customs:PopupModal}}, Path=CloseCommand}" HorizontalAlignment="Right" Margin="5"/>
                        <popups:company_details_popup Grid.Row="1" DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type customs:PopupModal}}}"/>
                    </Grid>
                </Border>
            </Grid>
        </customs:PopupModal>
        
        <!-- company list, including current schedule -->
        <GroupBox Header="Company List" Grid.Row="1" Grid.ColumnSpan="2">
            <DataGrid x:Name="companyDataGrid" Margin="0,3,0,0" 
                      SelectedValuePath="Id" SelectedValue="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:collection_page}},Path=Selections.SelectedCompany,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCell.Style.Default}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive}" Value="False">
                                <Setter Property="Foreground" Value="Silver"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn CellStyle="{StaticResource DataGridCell.Style.ShowOnHover}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Button Style="{StaticResource BorderlessButton}" FontFamily="{StaticResource fontawesome-solid}" Content="{StaticResource fa-edit}" Click="AddCompany_Click" Margin="3,0,3,0" Foreground="Navy" ToolTip="Edit Company"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Style="{StaticResource BorderlessButton}" FontFamily="{StaticResource fontawesome-solid}" Content="{StaticResource fa-info}" Click="CompanyDetails_Click" Foreground="Gray" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2,0,2,0" ToolTip="Click for more info"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Company" Binding="{Binding CompanyName}" Width="100">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextColumn.ElementStyle.Left}">
                                <Setter Property="ToolTip" Value="{Binding CompanyName}"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsActive}" Value="True"/>
                                            <Condition Binding="{Binding HasOverdue}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Foreground" Value="Red"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn HeaderStyle="{StaticResource DataGridColumnHeader.Center}">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="BT" ToolTip="Asterisk ( * ) means company sends collection thru Bank Transfer"/>
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextColumn.ElementStyle.Center}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsBankTransfer}" Value="True">
                                        <Setter Property="Text" Value="*"/>
                                        <Setter Property="ToolTip" Value="Company is Bank Transfer"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn HeaderStyle="{StaticResource DataGridColumnHeader.Center}">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="BIR" ToolTip="Asterisk ( * ) means company is NOT applicable to BIR 2307"/>
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextColumn.ElementStyle.Center}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Is2307}" Value="False">
                                        <Setter Property="Text" Value="*"/>
                                        <Setter Property="ToolTip" Value="Company is NOT applicable to BIR 2307"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Type" Binding="{Binding ClientType}" ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Left}"/>
                    <DataGridTextColumn Header="Location" Binding="{Binding Location.LocationName}" ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Left}" Width="65"/>
                    <DataGridTextColumn Binding="{Binding ContactPerson}" Width="100">
                        <DataGridTextColumn.Header>
                            <TextBlock ToolTip="{StaticResource CollectionContactPerson}" ToolTipService.InitialShowDelay="0" ToolTipService.ShowDuration="999999">Contact Person <Run Style="{StaticResource QuestionRunStyle}"/></TextBlock>
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextColumn.ElementStyle.Left}">
                                <Setter Property="ToolTip" Value="{Binding ContactPerson}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentScheduledCollection.ScheduleDate}" Value="{x:Null}">
                                        <Setter Property="Foreground" Value="Red"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentScheduledCollection.NotScheduled}" Value="True">
                                        <Setter Property="Foreground" Value="Red"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Contact #" Binding="{Binding ContactNumber}" Width="120">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextColumn.ElementStyle.Left}">
                                <Setter Property="ToolTip" Value="{Binding ContactNumber}"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridCheckBoxColumn Header="F / U" Binding="{Binding HasFollowUp}" HeaderStyle="{StaticResource DataGridColumnHeader.Center}" ElementStyle="{StaticResource DataGridCheckBoxColumn.ElementStyle}"/>
                    <!-- start schedule info -->
                    <DataGridTemplateColumn CellStyle="{StaticResource DataGridCell.Style.ShowOnHover}" CellTemplateSelector="{StaticResource AddEditScheduleTemplateSelector}"/>
                    <DataGridTextColumn Header="Updated" Binding="{Binding UpdatedDate,StringFormat=MMM-dd}" HeaderStyle="{StaticResource DataGridColumnHeader.Right}" ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Right}" Foreground="Gray"/>
                    <DataGridTextColumn Header="By" Binding="{Binding UpdatedByEmployee.EmployeeName}" Width="60" Foreground="Gray">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextColumn.ElementStyle.Left}">
                                <Setter Property="ToolTip" Value="{Binding CurrentScheduledCollection.UpdateByEmployee.EmployeeName}"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding CurrentScheduledCollection.ScheduleDate,StringFormat=MMM-dd}" HeaderStyle="{StaticResource DataGridColumnHeader.Right}" FontWeight="Bold" Foreground="Purple">
                        <DataGridTextColumn.Header>
                            <TextBlock ToolTip="{StaticResource ScheduledTooltip}" ToolTipService.InitialShowDelay="0" ToolTipService.ShowDuration="999999">Scheduled <Run Style="{StaticResource QuestionRunStyle}"/></TextBlock>
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextColumn.ElementStyle.Right}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentScheduledCollection.NotScheduled}" Value="True">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn CellStyle="{StaticResource DataGridCell.Style.ShowOnHover}" CellTemplateSelector="{StaticResource CollectScheduleTemplateSelector}"/>
                    <DataGridTextColumn Header="Notes" Binding="{Binding CurrentScheduledCollection.ScheduleNotesDisplay,Converter={StaticResource TextNoWrapConverter}}" Width="150">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextColumn.ElementStyle.Left}">
                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                <Setter Property="ToolTip" Value="{Binding CurrentScheduledCollection.ScheduleNotesDisplay}"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <!-- end schedule info -->
                    <!-- display latest collection date -->
                    <DataGridTextColumn Header="Collected" Binding="{Binding LatestCollected.CollectedDate,StringFormat=MMM-dd}" HeaderStyle="{StaticResource DataGridColumnHeader.Right}" ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Right}" Foreground="Gray"/>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
        <!-- collection list -->
        <GroupBox Header="Collection" Grid.Row="1" Grid.Column="2">
            <DataGrid x:Name="collectionDataGrid" Margin="0,3,0,0">
                <DataGrid.Columns>
                    <DataGridTemplateColumn CellStyle="{StaticResource DataGridCell.Style.ShowOnHover}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Button Style="{StaticResource BorderlessButton}" FontFamily="{StaticResource fontawesome-solid}" Content="{StaticResource fa-edit}" Click="EditCollect_Click" Margin="3,0,3,0" Foreground="Navy" ToolTip="Edit Collection"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Collected" Binding="{Binding CollectedDate,StringFormat=MMM-dd}" HeaderStyle="{StaticResource DataGridColumnHeader.Right}" ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Right}" FontWeight="Bold" Foreground="Purple"/>
                    <DataGridTextColumn Header="Company" Binding="{Binding Company.CompanyName}" Width="100">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextColumn.ElementStyle.Left}">
                                <Setter Property="ToolTip" Value="{Binding Company.CompanyName}"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Check Amt." Binding="{Binding CheckAmount, Converter={StaticResource CurrencyNoCurrencyDisplayConverter}}" HeaderStyle="{StaticResource DataGridColumnHeader.Right}" ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Right}" Width="68" Foreground="DarkGreen"/>
                    <DataGridTextColumn Header="Cash Amt." Binding="{Binding CashAmount, Converter={StaticResource CurrencyNoCurrencyDisplayConverter}}" HeaderStyle="{StaticResource DataGridColumnHeader.Right}" ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Right}" Width="68" Foreground="DarkGreen"/>
                    <DataGridTextColumn Header="OR No." Binding="{Binding ReceiptNumber}" ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Left}"/>
                    <DataGridTextColumn Header="Invoice #" Binding="{Binding InvoiceNumber}" ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Left}"/>
                    <DataGridTextColumn Header="Bank" Binding="{Binding Bank.BankName}" ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Left}" Width="60"/>
                    <DataGridTextColumn Header="Check #" Binding="{Binding CheckNumber}" ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Left}"/>
                    <DataGridTemplateColumn Header="2307" Width="35" HeaderStyle="{StaticResource DataGridColumnHeader.Center}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Style="{StaticResource BorderlessButton}" FontFamily="{StaticResource fontawesome-solid}" Content="{StaticResource fa-file}" Foreground="#f6b40f" ToolTip="{Binding File2307Attachment}" Click="OpenFile_Click"
                                        VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding File2307Attachment,Converter={StaticResource StringToVisibilityConverter}}"
                                        me:FileExtension.FileName="{Binding File2307Attachment}" me:FileExtension.Directory="{x:Static helpers:CollectionScheduleHelper.FILE2307_DIRECTORY}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="WHT" Binding="{Binding WhtAmount, Converter={StaticResource CurrencyNoCurrencyDisplayConverter}}" HeaderStyle="{StaticResource DataGridColumnHeader.Right}" ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Right}" Foreground="DarkOrange" Width="55"/>
                    <DataGridTextColumn Header="Updated" Binding="{Binding UpdatedDate,StringFormat=MMM-dd}" HeaderStyle="{StaticResource DataGridColumnHeader.Right}" ElementStyle="{StaticResource DataGridTextColumn.ElementStyle.Right}" Foreground="Gray"/>
                    <DataGridTextColumn Header="By" Binding="{Binding CollectedByEmployee.EmployeeName}" Width="60" Foreground="Gray">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextColumn.ElementStyle.Left}">
                                <Setter Property="ToolTip" Value="{Binding CollectedByEmployee.EmployeeName}"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
    </Grid>
</Page>
